#!/usr/bin/env python3
"""
Environment Setup Script
Prompts user for all required environment variables and creates .env file
"""

import os

def setup_env():
    """Interactive setup for environment variables"""
    print("üîß Environment Setup")
    print("=" * 40)
    print("This script will create a .env file in your project root.")
    print("Please provide the following information:\n")
    
    # Path to the global .env file (project root)
    root_env_path = os.path.abspath(os.path.join(os.path.dirname(__file__), '../../.env'))
    
    env_vars = {}
    
    # Notion Configuration
    print("üìù Notion Configuration:")
    env_vars['NOTION_TOKEN'] = input("Notion Integration Token: ").strip()
    env_vars['PARENT_PAGE_ID'] = input("Notion Parent Page ID: ").strip()
    
    # Check if database already exists
    existing_db = input("Do you have an existing Notion database ID? (y/n): ").strip().lower()
    if existing_db == 'y':
        env_vars['DATABASE_ID'] = input("Existing Database ID: ").strip()
    else:
        env_vars['DATABASE_ID'] = ""
    
    print("\nüêô GitHub Configuration:")
    env_vars['TOKEN_GITHUB'] = input("GitHub Personal Access Token: ").strip()
    env_vars['REPO_OWNER'] = input("GitHub Username/Organization: ").strip()
    env_vars['REPO_NAME'] = input("Repository Name: ").strip()
    
    print("\nüí¨ Slack Configuration:")
    env_vars['SLACK_WEBHOOK_URL'] = input("Slack Webhook URL: ").strip()
    
    print("\nü§ñ AI Configuration (Optional):")
    env_vars['GEMINI_API_KEY'] = input("Google Gemini API Key (optional): ").strip()
    
    # Create .env file
    with open(root_env_path, 'w') as f:
        f.write("# Environment Variables for Meeting Task Management\n")
        f.write("# Generated by setup_env.py\n\n")
        
        f.write("# Notion Configuration\n")
        f.write(f"NOTION_TOKEN={env_vars['NOTION_TOKEN']}\n")
        f.write(f"PARENT_PAGE_ID={env_vars['PARENT_PAGE_ID']}\n")
        if env_vars['DATABASE_ID']:
            f.write(f"DATABASE_ID={env_vars['DATABASE_ID']}\n")
        f.write("\n")
        
        f.write("# GitHub Configuration\n")
        f.write(f"TOKEN_GITHUB={env_vars['TOKEN_GITHUB']}\n")
        f.write(f"REPO_OWNER={env_vars['REPO_OWNER']}\n")
        f.write(f"REPO_NAME={env_vars['REPO_NAME']}\n")
        f.write("\n")
        
        f.write("# Slack Configuration\n")
        f.write(f"SLACK_WEBHOOK_URL={env_vars['SLACK_WEBHOOK_URL']}\n")
        f.write("\n")
        
        f.write("# AI Configuration\n")
        f.write(f"GEMINI_API_KEY={env_vars['GEMINI_API_KEY']}\n")
    
    print(f"\n‚úÖ .env file created at: {root_env_path}")
    print("\nüìã Next steps:")
    print("1. If you don't have a Notion database, run: python create_notiondb.py")
    print("2. Test your setup: python main.py")
    print("3. Start monitoring: python github_integration.py")

if __name__ == "__main__":
    setup_env() 